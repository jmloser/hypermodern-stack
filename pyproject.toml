[project]
name = "hypermodern-stack"
version = "0.1.0"
description = "Hypermodern Python stack for backend API development and data science"
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
    # Core data science stack
    "numpy>=2.0.0",
    "scipy>=1.14.0",
    "pandas>=2.2.0",
    "polars>=1.0.0",  # Modern DataFrame library
    "pyarrow>=17.0.0",  # Fast columnar data
    
    # Scientific computing extensions
    "scikit-learn>=1.5.0",
    "statsmodels>=0.14.0",
    "xarray>=2024.6.0",  # N-dimensional arrays
    "numba>=0.60.0",  # JIT compilation
    
    # Backend API development
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.9.0",
    "httpx>=0.27.0",  # Modern HTTP client
    "asyncpg>=0.29.0",  # PostgreSQL async driver
    "sqlalchemy>=2.0.35",  # ORM
    "redis>=5.1.0",
    
    # Data visualization (modern tools)
    "plotly>=5.24.0",
    "altair>=4.2.1,<5.0.0",  # Grammar of graphics
    "seaborn>=0.13.0",
    "matplotlib>=3.9.0",
    "bokeh>=3.5.0",
    "holoviews>=1.19.0",  # Declarative data viz
    "datashader>=0.16.0",  # Big data visualization
    
    # Interactive computing
    "jupyter>=1.1.0",
    "jupyterlab>=4.2.0",
    "ipywidgets>=8.1.0",
    "notebook>=7.2.0",
    
    # Data processing and ETL
    "duckdb>=1.1.0",  # In-process SQL OLAP database
    "dask>=2024.8.0",  # Parallel computing
    "prefect>=3.0.0",  # Modern workflow orchestration
    # "great-expectations>=0.18.0",  # Data validation - temporarily removed due to conflicts
    
    # Development tools
    "ruff>=0.7.0",  # Fast linter and formatter
    "mypy>=1.11.0",  # Type checking
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-xdist>=3.6.0",  # Parallel testing
    "coverage>=7.6.0",
    
    # Utility libraries
    "pydantic-settings>=2.6.0",
    "typer>=0.12.0",  # CLI framework
    "rich>=13.8.0",  # Rich text and beautiful formatting
    "loguru>=0.7.0",  # Better logging
    "structlog>=24.4.0",  # Structured logging
    "click>=8.1.0",
    
    # Time series and financial data
    "yfinance>=0.2.0",
    "pandas-datareader>=0.10.0",
    "tsfresh>=0.20.0",  # Time series feature extraction
    
    # Machine Learning extensions
    "lightgbm>=4.5.0",
    "xgboost>=2.1.0",
    "catboost>=1.2.0",
    "optuna>=4.0.0",  # Hyperparameter optimization
    "mlflow>=2.16.0",  # ML experiment tracking
    
    # Additional modern tools
    "polars-lts-cpu>=1.8.0",  # Alternative to pandas
    "ibis-framework>=9.4.0",  # Universal data analytics
    "pyjanitor>=0.28.0",  # Data cleaning
    "streamlit>=1.38.0",  # Web app framework for data
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.0.0",
    "black>=24.8.0",  # Code formatting (fallback)
    "isort>=5.13.0",  # Import sorting
    "bandit>=1.7.0",  # Security linting
    # "safety>=3.2.0",  # Dependency vulnerability scanning - temporarily removed
    "pip-audit>=2.7.0",  # Security scanner
]

geo = [
    "geopandas>=1.0.0",
    "folium>=0.17.0",
    "contextily>=1.6.0",
    "rasterio>=1.4.0",
    "shapely>=2.0.0",
]

nlp = [
    "transformers>=4.45.0",
    "tokenizers>=0.20.0",
    "datasets>=3.0.0",
    "spacy>=3.8.0",
    "nltk>=3.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py313"
line-length = 88
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E203", "E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
